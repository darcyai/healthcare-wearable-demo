kind: Application
apiVersion: iofog.org/v3
metadata:
  name: darcy-heart-rate-demo
spec:
  microservices:
    # Custom micro service that will simulate sensor data or connect to a heart rate monitor via Bluetooth
    - name: "data-generator"
      agent:
        name: "{% assign agent = \"\" | findAgent | first %}{{ agent.name }}"
      images:
        arm: "darcyai/heart-rate-demo-generator"
        x86: "darcyai/heart-rate-demo-generator"
      container:
        rootHostAccess: false
        ports: []
      config:
        # data will be mocked
        test_mode: true
        data_label: "Anonymous Person"
    # Simple JSON viewer for the heart rate output
    - name: "viewer"
      agent:
        name: "{% assign agent = \"\" | findAgent | last %}{{ agent.name }}"
      images:
        arm: "darcyai/heart-rate-demo-viewer"
        x86: "darcyai/heart-rate-demo-viewer"
      container:
        rootHostAccess: false
        ports:
          # The ui will be listening on port 80 (internal).
          - external: 5005 # You will be able to access the ui on <NODE_IP_ADDRESS>:5005
            internal: 80 # The ui is listening on port 80. Do not edit this.
            public:
              schemes:
              - https
              protocol: http
        volumes: []
        env:
          - key: "BASE_URL"
            value: "http://localhost:8080/data"
  routes:
    # Use this section to configure route between microservices
    # Use microservice name
    - from: "{{self.microservices[0].name}}"
      to: "{{self.microservices[1].name}}"
      name: "monitor-to-viewer"